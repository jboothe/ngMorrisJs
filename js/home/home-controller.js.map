{"version":3,"names":[],"mappings":"","sources":["home/home-controller.js"],"sourcesContent":["/**\n * @ngdoc object\n * @name HomeCtrl\n * @description Controller for  screens\n * @author Created by jboothe on 11/25/15\n */\n\n(function () {\n  'use strict';\n  var ctrlName = 'HomeCtrl';\n\n  angular\n    .module('home')\n    .controller(ctrlName, HomeCtrl);\n\n  HomeCtrl.$inject = ['$log', '$q', 'DriversService'];\n  function HomeCtrl($log, $q, DriversService) {\n    var homeCtrl = this;\n\n    // Line & Area Chart Options\n    // http://morrisjs.github.io/morris.js/lines.html\n    homeCtrl.driverLineChart = {\n      data: [],\n      options: {\n        xkey: 'round',\n        ykeys: ['finishPos', 'qualifyPos'],\n        labels: ['Finished', 'Qualified'],\n        lineColors: ['rgba(205, 38, 38, 0.5)', 'rgba(100, 100, 100, 0.5)'],\n        lineWidth: 3,\n        pointSize: 4,\n        pointFillColors: ['#c7254e'],\n        pointStrokeColors: ['#ffffff'],\n        ymin: -10,\n        ymax: -1,\n        smooth: true,\n        hideHover: false,\n        // hoverCallback: hoverCallbackFunc,\n        parseTime: false,\n        // postUnits: '%',\n        // preUnits: '$',\n        // dateFormat: dateFormatFunc,\n        // xLabels: \"month\",\n        // xLabelFormat: xLabelFormatFunc,\n        // xLabelAngle: 0,\n        yLabelFormat: yLabelPosFormatter,\n        goals: [-1.0],\n        goalLineColors: ['#c0c0c0'],\n        goalStrokeWidth: 1,\n        // events: [],\n        // eventStrokeWidth: 1,\n        // eventLineColors: #cccccc,\n        // axes: false,\n        grid: false,\n        // gridTextColor: #888888,\n        // gridTextSize: 12,\n        // gridTextFamiliy: sans-serif,\n        // gridTextWeight: normal,\n        resize: true,\n\n        // Area Chart Options\n        fillOpacity: 0.3,\n        behaveLikeLine: true\n      }\n    };\n\n    // Bar Chart Options\n    // http://morrisjs.github.io/morris.js/bars.html\n    homeCtrl.driverBarChart = {\n      data: [],\n      options: {\n        xkey: 'round',\n        ykeys: ['avgLap', 'fastLap'],\n        labels: ['Avg Lap', 'Fastest Lap'],\n        barColors: ['#777777', '#e74c3c'],\n        stacked: false,\n        hideHover: false,\n        // hoverCallback: hoverCallbackFunc,\n        // axes: false,\n        grid: false,\n        // gridTextColor: #888888,\n        // gridTextSize: 12,\n        // gridTextFamiliy: sans-serif,\n        // gridTextWeight: normal,\n        resize: true,\n        yLabelFormat: yLabelMPHFormatter\n      }\n    };\n\n    // Donut Chart Options\n    // http://morrisjs.github.io/morris.js/donuts.html\n    homeCtrl.driverDonutChart = {\n      data: [\n        {label: 'Top 5', value: 6},\n        {label: 'Top 10', value: 3},\n        {label: 'DNF', value: 1}\n      ],\n      options: {\n        colors: ['#e74c3c', '#c0392b', '#777777'],\n        resize: true\n        // formatter: donutFormatFunc\n      }\n    };\n\n    activate();\n\n    function activate() {\n      var promises = [getDriverRaceResults()]; //eslint-disable-line\n\n      return $q.all(promises).then(function () {\n        $log.info(ctrlName + ' Activated!');\n      });\n    }\n\n    function getDriverRaceResults() {\n      return DriversService.findAll()\n        .then(function (res) {\n          $log.info('Got '+ res.length + ' Driver Race results', res);\n          homeCtrl.driverLineChart.data = negativeData(res, ['qualifyPos', 'finishPos']);\n          homeCtrl.driverBarChart.data = res;\n          getDonutData(res);\n          // homeCtrl.driverDonutChart.data = DriversService.getDonutData(res);\n        },\n        function (error) {\n          $log.error('Error getting Driver Race results', error);\n        });\n    }\n\n    function getDonutData(data) {\n      return DriversService.getDonutData(data)\n        .then(function (res) {\n            homeCtrl.driverDonutChart.data = res;\n            $log.info('Donut Data ', homeCtrl.driverDonutChart.data);\n        });\n    }\n\n    // Convert finish and qualifying position numbers to negative values\n    // to support reversing y-axis of line chart\n    // Takes the data array and an array of properties to be converted to negatives\n    function negativeData(arr, props) {\n      var newArr = arr.map(function (x) {\n        for (var i = 0; i < props.length; i++) {\n          x[props[i]] = x[props[i]] > 0 ? -x[props[i]] : null;\n        }\n        return x;\n      });\n      return newArr;\n    }\n\n    // Formatting Y Label - Note: Math.round is not entirely accurate but close.\n    // Since Morris Chart doesn't have a \"force integer\" option, we are rounding\n    // to nearest whole number.\n    function yLabelPosFormatter(y) {\n      if (isNaN(y)) { return 'n/a'; }\n      y = Math.round(y);\n      return y === 0 ? 'P1' : 'P' + -y;\n    }\n\n    // Round speed to 2 decimal places and add MPH suffix\n    function yLabelMPHFormatter(y) {\n      return isNaN(y) ? 'n/a' : y.toFixed(2)+' MPH';\n    }\n\n  }\n}());\n"],"file":"home/home-controller.js","sourceRoot":"/source/"}