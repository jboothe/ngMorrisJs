{"version":3,"names":[],"mappings":"","sources":["directives/ng-morris-js/ng-morris-js.js"],"sourcesContent":["/**\n *   ng-morris-js %%GULP_INJECT_VERSION%%\n *   Copyright Â© 2015-2016 Jeff Boothe\n *\n *   Licensed under the Apache License, Version 2.0 (the \"License\");\n *   you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n*/\n\n'use strict';\n(function(){\n  angular.module('ng-morris-js', [])\n\n    // Line and Area option settings: https://morrisjs.github.io/morris.js/lines.html\n    .directive('ngMorrisLineChart', function () {\n      return {\n        restrict: 'EA',\n        scope: {\n          chartData: '=',\n          chartOptions: '='\n        },\n        replace: true,\n        template: '<div></div>',\n        link: function link(scope, element) {\n          scope.$watch('chartData', function () {\n            if (scope.chartData && scope.chartOptions) {\n              scope.chartOptions.element = element;\n              scope.chartOptions.data = scope.chartData;\n              if (!scope.chartInstance) { scope.chartInstance = new Morris.Line(scope.chartOptions); }\n              else { scope.chartInstance.setData(scope.chartData); }\n            }\n          });\n        }\n      };\n    })\n\n    .directive('ngMorrisAreaChart', function () {\n      return {\n        restrict: 'EA',\n        scope: {\n          chartData: '=',\n          chartOptions: '='\n        },\n        replace: true,\n        template: '<div></div>',\n        link: function link(scope, element) {\n          scope.$watch('chartData', function () {\n            if (scope.chartData && scope.chartOptions) {\n              scope.chartOptions.element = element;\n              scope.chartOptions.data = scope.chartData;\n              if (!scope.chartInstance) { scope.chartInstance = new Morris.Area(scope.chartOptions); }\n              else { scope.chartInstance.setData(scope.chartData); }\n            }\n          });\n        }\n      };\n    })\n\n    // Bar option settings: https://morrisjs.github.io/morris.js/bars.html\n    .directive('ngMorrisBarChart', function () {\n      return {\n        restrict: 'EA',\n        scope: {\n          chartData: '=',\n          chartOptions: '='\n        },\n        replace: true,\n        template: '<div></div>',\n        link: function link(scope, element) {\n          scope.$watch('chartData', function () {\n            if (scope.chartData && scope.chartOptions) {\n              scope.chartOptions.element = element;\n              scope.chartOptions.data = scope.chartData;\n              if (!scope.chartInstance) { scope.chartInstance = new Morris.Bar(scope.chartOptions); }\n              else { scope.chartInstance.setData(scope.chartData); }\n            }\n          });\n        }\n      };\n    })\n\n    // Donut option settings: https://morrisjs.github.io/morris.js/donuts.html\n    .directive('ngMorrisDonutChart', function () {\n      return {\n        restrict: 'EA',\n        scope: {\n          chartData: '=',\n          chartOptions: '='\n        },\n        replace: true,\n        template: '<div></div>',\n        link: function link(scope, element) {\n          scope.$watch('chartData', function () {\n            if (scope.chartData && scope.chartOptions) {\n              scope.chartOptions.element = element;\n              scope.chartOptions.data = scope.chartData;\n              if (!scope.chartInstance) { scope.chartInstance = new Morris.Donut(scope.chartOptions); }\n              else { scope.chartInstance.setData(scope.chartData); }\n            }\n          });\n        }\n      };\n    });\n}());\n"],"file":"directives/ng-morris-js/ng-morris-js.js","sourceRoot":"/source/"}